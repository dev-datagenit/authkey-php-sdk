<?php

namespace AuthkeyPhpSdk;

/* This file is developed by Ritesh Prasad for Authkey Portal of Datagen Internet Services Private Limited, India
 * Any changes in this file could result in error behaviors and would prevent your code to send any message using
 * the authkey.io portal.
 * Developed on 12 February 2021.
 */

Class AuthkeyPhpSdk {
    
    /* Authkey URL */    
    private $authkeyURL;
    
    /* Mobile Number intended to receive message */
    private $mobile;
    
    /* Email intended to receive message */
    private $email;
    
    /* User-specific authkey credential */
    private $authkey;
    
    /* Country code of mobile number */
    private $countryCode;
    
    /* SMS Template Identifier */
    private $sid;
    
     /* Voice Template Identifier */
    private $vid;
    
     /* Email Template Identifier */
    private $mid;
    
     /* Fallback SMS Template Identifier */
    private $fb1sid;
    
     /* Fallback Voice Template Identifier */
    private $fb1vid;
    
     /* Fallback Email Template Identifier */
    private $fb1mid;
    
     /* SMS Content */
    private $sms;
    
     /* Voice Content */
    private $voice;
    
     /* Specifies if SMS should be send in unicode format */
    private $isUnicode;
    
     /* Specifies if Flash sms to be sent */
    private $isFlash;
    
     /* Specifies if Flash call to be sent */
    private $isCallFlash;
    
    /* SMS Sender information */
    private $senderId;
    
    /* DLT Entity identifier, used only for sending sms to Indian mobile number */
    private $entityId;
    
    /* API parameters generated by this class */
    private $parameters;
    
    /* Array of dynamic values to be send in the message */
    private $dynamicValues = Array();
    
    /* Constructor Function */
    public function __construct() {
        $this->authkeyURL = "https://api.authkey.io/request?";
    }

    /* Set Recepient Mobile Number */
    public function setMobile($mobile) {
        $this->mobile = $mobile;
        return true;
    }

    /* Retrieve Recepient Mobile Number*/
    public function getMobile() {
        return $this->mobile;
    }

    /* Set Country Code */
    public function setCountryCode($countryCode) {
        $this->countryCode = $countryCode;
        return true;
    }

    /* Retrieve Country Code */
    public function getCountryCode() {
        return $this->countryCode;
    }

    /* Set Recepient Email */
    public function setEmail($email) {
        $this->email = $email;
        return true;
    }

    /* Retrieve Recepient Email */
    public function getEmail() {
        return $this->email;
    }

    /* Set Authkey */
    public function setAuthkey($authkey) {
        $this->authkey = $authkey;
        return true;
    }

    /* Retrieve Authkey */
    public function getAuthkey() {
        return $this->authkey;
    }

    /* Set SMS Tempplate Id */
    public function setSid($sid) {
        $this->sid = $sid;
        return true;
    }

    /* Retreive SMS Template Id */
    public function getSid() {
        return $this->sid;
    }

    /* Set Voice Template Id */
    public function setVid($vid) {
        $this->vid = $vid;
        return true;
    }

    /* Retrieve Voice Template Id */
    public function getVid() {
        return $this->vid;
    }

    /* Set Email Template Id */
    public function setMid($mid) {
        $this->mid = $mid;
        return true;
    }

    /* Retrieve Email Template Id */
    public function getMid() {
        return $this->mid;
    }

    /* Set SMS Content */
    public function setSms($sms) {
        $this->sms = $sms;
        return true;
    }

    /* Retrieve SMS Content */
    public function getSms() {
        return $this->sms;
    }

    /* Set Voice Content */
    public function setVoice($voice) {
        $this->voice = $voice;
        return true;
    }

    /* Get Voice Content */
    public function getVoice() {
        return $this->voice;
    }

    /* Set Fallback SMS Template Id */
    public function setFb1sid($fb1sid) {
        $this->fb1sid = $fb1sid;
        return true;
    }

    /* Retrieve Fallback SMS Template Id */
    public function getFb1sid() {
        return $this->fb1sid;
    }

    /* Set Fallback Voice Template Id */
    public function setFb1vid($fb1vid) {
        $this->fb1vid = $fb1vid;
        return true;
    }

    /* Retrieve Fallback Voice Template Id */
    public function getFb1vid() {
        return $this->fb1vid;
    }

    /* Set Fallback Email Template Id */
    public function setFb1mid($fb1mid) {
        $this->fb1mid = $fb1mid;
        return true;
    }

    /* Retrieve Fallback Email Template Id */
    public function getFb1mid() {
        return $this->fb1mid;
    }

    /* Set DLT Entity Id */
    public function setEntityId($entityId) {
        $this->entityId = $entityId;
        return true;
    }

    /* Retrieve DLT Entity Id */
    public function getEntityId() {
        return $this->entityId;
    }

    /* Set SMS Unicode Flag */
    public function setUnicode($isUnicode) {
        if (in_array($isUnicode, Array(0, 1))) {
            $this->isUnicode = $isUnicode;
            return true;
        } else {
            return false;
        }
    }

    /* Retrieve SMS Unicode Flag */
    public function getUnicode() {
        return $this->isUnicode;
    }

    /* Set SMS Flash Flag */
    public function setFlash($isFlash) {
        if (in_array($isFlash, Array(0, 1))) {
            $this->isFlash = $isFlash;
            return true;
        } else {
            return false;
        }
    }

    /* Retrieve SMS FLash Flag */
    public function getFlash() {
        return $this->isFlash;
    }

    /* Set Call Flash Flag */
    public function setCallFlash($isCallFlash) {
        if (in_array($isCallFlash, Array(0, 1))) {
            $this->isCallFlash = $isCallFlash;
            return true;
        } else {
            return false;
        }
    }

    /* Retrieve Call FLash Flag */
    public function getCallFlash() {
        return $this->isCallFlash;
    }

    /* Set SMS Sender Id */
    public function setSenderId($senderId) {
        $this->senderId = $senderId;
        return true;
    }

    /* Retrieve SMS Sender Id */
    public function getSenderId() {
        return $this->senderId;
    }

    /* Set Dynamic Value Array. Parameter to this function should be a valid array with key & value */
    public function setDynamicValues($dynamicValues) {
        if (is_array($dynamicValues)) {
            $this->dynamicValues = $dynamicValues;
            return true;
        } else {
            return false;
        }
    }

    /* Retrieve Dynamic Value Array */
    public function getDynamicValues() {
        return $this->dynamicValues;
    }

    /* Function to send message */
    public function sendMessage() {
        $paramArr = Array();
        if ($this->sid == '' && $this->vid == '' && $this->mid == '' && $this->sms == '' && $this->voice == '') {
            return 'No Message to send';
        }
        if ($this->sid != '' && $this->sms != '') {
            return 'Cannot set both sid and sms';
        }
        if ($this->vid != '' && $this->voice != '') {
            return 'Cannot set both vid and voice';
        }
        if ($this->authkey == '') {
            return 'Kindly set Authkey';
        }
        if ($this->mobile == '' &&
                (
                $this->sid != '' ||
                $this->sms != '' ||
                $this->vid != '' ||
                $this->voice != '' ||
                $this->fb1sms != '' ||
                $this->fb1sid != '' ||
                $this->fb1vid != '' ||
                $this->fb1voice != ''
                )) {
            return 'Kindly set Mobile';
        }
        if ($this->email == '' && ($this->mid != '' || $this->fb1mid != '')) {
            return 'Kindly set Email';
        }
        if ($this->countryCode == '' && 
                (
                $this->sid != '' || 
                $this->sms != '' || 
                $this->vid != '' || 
                $this->voice != '' ||               
                $this->fb1sms != '' ||
                $this->fb1sid != '' ||
                $this->fb1vid != '' ||
                $this->fb1voice != ''
                )) {
            return 'Kindly set Country Code';
        }
        $paramArr['authkey'] = $this->authkey;
        $paramArr['mobile'] = $this->mobile;
        if ($this->countryCode != '') {
            $paramArr['country_code'] = $this->countryCode;
        }
        if ($this->sid != '') {
            $paramArr['sid'] = $this->sid;
        }
        if ($this->vid != '') {
            $paramArr['vid'] = $this->vid;
        }
        if ($this->mid != '') {
            $paramArr['mid'] = $this->mid;
        }
        if ($this->senderId != '') {
            $paramArr['sender'] = $this->senderId;
        }
        if ($this->entityId != '') {
            $paramArr['pe_id'] = $this->entityId;
        }
        if ($this->isUnicode != '') {
            $paramArr['is_unicode'] = $this->isUnicode;
        }
        if ($this->isFlash != '') {
            $paramArr['is_flash'] = $this->isFlash;
        }
        if ($this->voice != '') {
            $paramArr['voice'] = $this->voice;
        }
        if ($this->sms != '') {
            $paramArr['sms'] = $this->sms;
        }
        if ($this->isCallFlash != '') {
            $paramArr['call_flash'] = $this->isCallFlash;
        }
        if (!empty($this->dynamicValues)) {
            foreach ($this->dynamicValues as $dynamicValueKey => $dynamicValue) {
                $paramArr[$dynamicValueKey] = $dynamicValue;
            }
        }
        $this->parameters = http_build_query($paramArr);
        return $this->callUrl();
    }

    /* URL Calling function */
    public function callUrl() {
         $ch = curl_init($this->authkeyURL . $this->parameters);
          curl_setopt($ch, CURLOPT_TIMEOUT, 5);
          curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 5);
          curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
          $response = curl_exec($ch);
          $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
          if ($httpCode < 200 || $httpCode > 399) {
          return 'error';
          }
          curl_close($ch);
          return $response;
    }

}

?>